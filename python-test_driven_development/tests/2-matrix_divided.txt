============================
doctest for 2-matrix_divided.py
============================
``matrix_divided()`` divides all elements of a matrix.

SUCCESSFUL TEST CONDITIONS
==========================
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[2, 4], [6, 8]], 2)
[[1.0, 2.0], [3.0, 4.0]]
>>> matrix_divided([[1.5, 3.0], [4.5, 6.0]], 1.5)
[[1.0, 2.0], [3.0, 4.0]]
>>> matrix_divided([[1000000, 2000000]], 1000000)
[[1.0, 2.0]]
>>> matrix_divided([[10, 20, 30]], 10)
[[1.0, 2.0, 3.0]]
>>> matrix_divided([[5]], 5)
[[1.0]]
>>> matrix_divided([[-2, -4], [-6, -8]], 2)
[[-1.0, -2.0], [-3.0, -4.0]]

ERROR TEST CONDITIONS
=====================
>>> matrix_divided("not a list", 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([1, 2, 3], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, "2"], [3, 4]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2], [3]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2], [3, 4]], "2")
Traceback (most recent call last):
TypeError: div must be a number
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero
